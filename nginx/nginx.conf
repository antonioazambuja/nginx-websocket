
#user  nobody;
#Defines which Linux system user will own and run the Nginx server

worker_processes  1;
error_log /dev/stdout info;
#Referes to single threaded process. Generally set to be equal to the number of CPUs or cores.

#error_log  logs/error.log; #error_log  logs/error.log  notice;
#Specifies the file where server logs. 

#pid        logs/nginx.pid;
#nginx will write its master process ID(PID).

events {
    worker_connections  1024;
    # worker_processes and worker_connections allows you to calculate maxclients value: 
    # max_clients = worker_processes * worker_connections
}


http {

    log_format main '[$time_local] - host="$host" host_name="$hostname" dest_port="$server_port" dest_ip="$server_addr" dest_server="$server_name" '
                    'src="$remote_addr" remote_port="$remote_port" src_ip="$realip_remote_addr" realip_remote_addr="$realip_remote_addr" realip_remote_port="$realip_remote_port" proxied_to="$proxy_host" proxied_to_port="$proxy_port" '
                    'proxy_protocol_addr="$proxy_protocol_addr" '
                    'time_local="$time_local" protocol="$server_protocol" status="$status" '
                    'bytes_out=$body_bytes_sent bytes_in=$upstream_response_length '
                    'http_user_agent="$http_user_agent" '
                    'http_x_forwarded_for="$http_x_forwarded_for" http_true_client_ip="$http_true_client_ip" '
                    'uri_path="$uri" http_referer="$http_referer" request="$request" '
                    'http_method="$request_method" upstream_response_time=$upstream_response_time upstream_addr="$upstream_addr" '
                    'request_time=$request_time '
                    'connection_requests=$connection_requests connections_active=$connections_active connections_reading=$connections_reading connections_waiting=$connections_waiting connections_writing=$connections_writing '
                    'body="$request_body"';

    upstream server {
        server server:8010;
    }
 
    server {
        listen 8020;
        stub_status on;
        access_log /dev/stdout main;
        location / {
            proxy_pass http://server;
            proxy_set_header Host $host;
        }
    }
}